// Design a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

// cid is a 2D array listing available currency.

// The checkCashRegister() function should always return an object with a status key and a change key.

// Return {status: "INSUFFICIENT_FUNDS", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change.

// Return {status: "CLOSED", change: [...]} with cash-in-drawer as the value for the key change if it is equal to the change due.

// Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key.

// Currency Unit	Amount
// Penny	$0.01 (PENNY)
// Nickel	$0.05 (NICKEL)
// Dime	$0.1 (DIME)
// Quarter	$0.25 (QUARTER)
// Dollar	$1 (ONE)
// Five Dollars	$5 (FIVE)
// Ten Dollars	$10 (TEN)
// Twenty Dollars	$20 (TWENTY)
// One-hundred Dollars	$100 (ONE HUNDRED)


function checkCashRegister(price, cash, cid) {
  
  //Declarations
  let change = (cash - price)*100;
  let newCid = JSON.parse(JSON.stringify(cid)); //To not modify initial array
  let values = [10000,2000,1000,500,100,25,10,5,1]; //In cents to avoid problems with floats.
  
  //Calculate the possible substraction of due change from cid
  let rest = newCid.reverse().reduce((changeR,pairCV,i)=>{
    while(changeR >= values[i] && pairCV[1]>0){
      changeR -= values[i];
      pairCV[1] -= values[i]/100;
    };return changeR; },change);
  
  
  //Calculate the change by substracting.
  newCid.reverse(); //Used reverse to work easily on index, revert.
  let changeR = cid.reduce(((acc,pairCV,ind)=>{
    let diff = cid[ind][1]-newCid[ind][1];
    if (diff>0){acc.push([pairCV[0],Math.round(100*diff)/100])};
    return acc;}),[]);

  //Return
  if (rest > 0){
    return {"status": "INSUFFICIENT_FUNDS", "change":[]}
  }
  else if (newCid.every(pairCV=>pairCV[1]<0.00001)){
           return {"status": "CLOSED", "change":cid}
           } 
  else {
    return {"status": "OPEN", "change":changeR.reverse()};
  };
};
